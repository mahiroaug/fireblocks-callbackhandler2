AWSTemplateFormatVersion: "2010-09-09"
Description: "Fireblocks Callback Handler - Foundation Stack (VPC, Subnets, Gateways)"

Parameters:
  ProjectName:
    Type: String
    Default: fireblocks-cbh
    Description: Project name for resource naming

  Environment:
    Type: String
    Default: dev
    AllowedValues: [dev, stg, prod]
    Description: Environment name

  VpcCIDR:
    Type: String
    Default: 10.0.0.0/16
    Description: CIDR block for VPC

  PublicSubnetCIDR:
    Type: String
    Default: 10.0.0.0/20
    Description: CIDR block for Public Subnet (NAT Gateway)

  PrivateSubnetACIDR:
    Type: String
    Default: 10.0.128.0/20
    Description: CIDR block for Private Subnet A (Cosigner + ECS)

  PrivateSubnetBCIDR:
    Type: String
    Default: 10.0.144.0/20
    Description: CIDR block for Private Subnet B (Cosigner + ECS)

Resources:
  # VPC Configuration
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-vpc-${Environment}
        - Key: Environment
          Value: !Ref Environment
        - Key: Stack
          Value: foundation
        - Key: Project
          Value: fireblocks-callback-handler
        - Key: ManagedBy
          Value: cloudformation

  # Public Subnet (NAT Gateway用)
  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PublicSubnetCIDR
      AvailabilityZone: !Select [0, !GetAZs ""]
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-public-subnet-${Environment}
        - Key: Environment
          Value: !Ref Environment
        - Key: Type
          Value: Public
        - Key: Project
          Value: fireblocks-callback-handler
        - Key: ManagedBy
          Value: cloudformation

  # Private Subnet A (Cosigner + ECS用)
  PrivateSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PrivateSubnetACIDR
      AvailabilityZone: !Select [0, !GetAZs ""]
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-private-subnet-a-${Environment}
        - Key: Environment
          Value: !Ref Environment
        - Key: Type
          Value: Private
        - Key: Project
          Value: fireblocks-callback-handler
        - Key: ManagedBy
          Value: cloudformation

  # Private Subnet B (Cosigner + ECS用)
  PrivateSubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PrivateSubnetBCIDR
      AvailabilityZone: !Select [1, !GetAZs ""]
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-private-subnet-b-${Environment}
        - Key: Environment
          Value: !Ref Environment
        - Key: Type
          Value: Private
        - Key: Project
          Value: fireblocks-callback-handler
        - Key: ManagedBy
          Value: cloudformation

  # Internet Gateway
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-igw-${Environment}
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: fireblocks-callback-handler
        - Key: ManagedBy
          Value: cloudformation

  # Internet Gateway Attachment
  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  # NAT Gateway用 Elastic IP
  NATGatewayEIP:
    Type: AWS::EC2::EIP
    DependsOn: InternetGatewayAttachment
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-nat-eip-${Environment}
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: fireblocks-callback-handler
        - Key: ManagedBy
          Value: cloudformation

  # NAT Gateway (Fireblocks SaaS通信用)
  NATGateway:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NATGatewayEIP.AllocationId
      SubnetId: !Ref PublicSubnet
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-nat-gateway-${Environment}
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: fireblocks-callback-handler
        - Key: ManagedBy
          Value: cloudformation

  # Public Route Table
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-public-rt-${Environment}
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: fireblocks-callback-handler
        - Key: ManagedBy
          Value: cloudformation

  # Public Route (Internet Gateway)
  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  # Public Subnet Route Table Association
  PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref PublicRouteTable

  # Private Route Table
  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-private-rt-${Environment}
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: fireblocks-callback-handler
        - Key: ManagedBy
          Value: cloudformation

  # Private Route (NAT Gateway)
  PrivateRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NATGateway

  # Private Subnet A Route Table Association
  PrivateSubnetARouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnetA
      RouteTableId: !Ref PrivateRouteTable

  # Private Subnet B Route Table Association
  PrivateSubnetBRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnetB
      RouteTableId: !Ref PrivateRouteTable

Outputs:
  VPCId:
    Description: VPC ID
    Value: !Ref VPC
    Export:
      Name: !Sub ${ProjectName}-${Environment}-VPC-ID

  PublicSubnetId:
    Description: Public Subnet ID
    Value: !Ref PublicSubnet
    Export:
      Name: !Sub ${ProjectName}-${Environment}-PublicSubnet-ID

  PrivateSubnetAId:
    Description: Private Subnet A ID
    Value: !Ref PrivateSubnetA
    Export:
      Name: !Sub ${ProjectName}-${Environment}-PrivateSubnetA-ID

  PrivateSubnetBId:
    Description: Private Subnet B ID
    Value: !Ref PrivateSubnetB
    Export:
      Name: !Sub ${ProjectName}-${Environment}-PrivateSubnetB-ID

  # Backward compatibility - ALB will use this for primary subnet
  PrivateSubnetId:
    Description: Private Subnet ID (Primary - for backward compatibility)
    Value: !Ref PrivateSubnetA
    Export:
      Name: !Sub ${ProjectName}-${Environment}-PrivateSubnet-ID

  PrivateRouteTableId:
    Description: Private Route Table ID
    Value: !Ref PrivateRouteTable
    Export:
      Name: !Sub ${ProjectName}-${Environment}-PrivateRouteTable-ID

  VPCCidrBlock:
    Description: VPC CIDR Block
    Value: !Ref VpcCIDR
    Export:
      Name: !Sub ${ProjectName}-${Environment}-VPC-CIDR

  NATGatewayId:
    Description: NAT Gateway ID
    Value: !Ref NATGateway
    Export:
      Name: !Sub ${ProjectName}-${Environment}-NATGateway-ID

  Environment:
    Description: Environment name
    Value: !Ref Environment
    Export:
      Name: !Sub ${ProjectName}-${Environment}-Environment

  ProjectName:
    Description: Project name
    Value: !Ref ProjectName
    Export:
      Name: !Sub ${ProjectName}-${Environment}-ProjectName
