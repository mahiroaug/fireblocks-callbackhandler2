AWSTemplateFormatVersion: '2010-09-09'
Description: 'Fireblocks Callback Handler - Foundation Stack (VPC, Subnets, Gateways)'

Parameters:
  VpcCIDR:
    Type: String
    Default: 10.0.0.0/16
    Description: CIDR block for VPC
  
  PublicSubnetCIDR:
    Type: String
    Default: 10.0.0.0/20
    Description: CIDR block for Public Subnet (NAT Gateway)
  
  PrivateSubnetCIDR:
    Type: String
    Default: 10.0.128.0/20
    Description: CIDR block for Private Subnet (Cosigner + ECS)
  
  Environment:
    Type: String
    Default: dev
    AllowedValues: [dev, prod]
    Description: Environment name

Resources:
  # VPC Configuration
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
        - Key: Name
          Value: !Sub fireblocks-callback-vpc-${Environment}
        - Key: Environment
          Value: !Ref Environment
        - Key: Stack
          Value: foundation

  # Public Subnet (NAT Gateway用)
  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PublicSubnetCIDR
      AvailabilityZone: !Select [0, !GetAZs '']
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub fireblocks-public-subnet-${Environment}
        - Key: Environment
          Value: !Ref Environment
        - Key: Type
          Value: Public

  # Private Subnet (Cosigner + ECS用)
  PrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PrivateSubnetCIDR
      AvailabilityZone: !Select [0, !GetAZs '']
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub fireblocks-private-subnet-${Environment}
        - Key: Environment
          Value: !Ref Environment
        - Key: Type
          Value: Private

  # Internet Gateway
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub fireblocks-igw-${Environment}
        - Key: Environment
          Value: !Ref Environment

  # Internet Gateway Attachment
  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  # NAT Gateway用 Elastic IP
  NATGatewayEIP:
    Type: AWS::EC2::EIP
    DependsOn: InternetGatewayAttachment
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: !Sub fireblocks-nat-eip-${Environment}
        - Key: Environment
          Value: !Ref Environment

  # NAT Gateway (Fireblocks SaaS通信用)
  NATGateway:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NATGatewayEIP.AllocationId
      SubnetId: !Ref PublicSubnet
      Tags:
        - Key: Name
          Value: !Sub fireblocks-nat-gateway-${Environment}
        - Key: Environment
          Value: !Ref Environment

  # Public Route Table
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub fireblocks-public-rt-${Environment}
        - Key: Environment
          Value: !Ref Environment

  # Public Route (Internet Gateway)
  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  # Public Subnet Route Table Association
  PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref PublicRouteTable

  # Private Route Table
  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub fireblocks-private-rt-${Environment}
        - Key: Environment
          Value: !Ref Environment

  # Private Route (NAT Gateway)
  PrivateRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NATGateway

  # Private Subnet Route Table Association
  PrivateSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet
      RouteTableId: !Ref PrivateRouteTable

Outputs:
  VPCId:
    Description: VPC ID
    Value: !Ref VPC
    Export:
      Name: !Sub ${AWS::StackName}-VPC-ID

  PublicSubnetId:
    Description: Public Subnet ID
    Value: !Ref PublicSubnet
    Export:
      Name: !Sub ${AWS::StackName}-PublicSubnet-ID

  PrivateSubnetId:
    Description: Private Subnet ID
    Value: !Ref PrivateSubnet
    Export:
      Name: !Sub ${AWS::StackName}-PrivateSubnet-ID

  PrivateRouteTableId:
    Description: Private Route Table ID
    Value: !Ref PrivateRouteTable
    Export:
      Name: !Sub ${AWS::StackName}-PrivateRouteTable-ID

  VPCCidrBlock:
    Description: VPC CIDR Block
    Value: !Ref VpcCIDR
    Export:
      Name: !Sub ${AWS::StackName}-VPC-CIDR

  NATGatewayId:
    Description: NAT Gateway ID
    Value: !Ref NATGateway
    Export:
      Name: !Sub ${AWS::StackName}-NATGateway-ID

  Environment:
    Description: Environment name
    Value: !Ref Environment
    Export:
      Name: !Sub ${AWS::StackName}-Environment 