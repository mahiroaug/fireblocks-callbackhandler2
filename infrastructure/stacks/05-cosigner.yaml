AWSTemplateFormatVersion: "2010-09-09"
Description: "Fireblocks Callback Handler - Cosigner Stack (EC2, Nitro Enclave)"

Parameters:
  ProjectName:
    Type: String
    Default: fireblocks-cbh
    Description: Project name for resource naming

  Environment:
    Type: String
    Default: dev
    AllowedValues: [dev, stg, prod, cm]
    Description: Environment name

  InstanceType:
    Type: String
    Default: c5.xlarge
    AllowedValues: [c5.large, c5.xlarge, c5.2xlarge, c5.4xlarge]
    Description: EC2 instance type for Cosigner (Nitro Enclave compatible)

  EbsVolumeSize:
    Type: Number
    Default: 30
    Description: Root EBS volume size in GB for Cosigner instance

  KeyPairName:
    Type: String
    Description: EC2 Key Pair name for emergency access
    Default: ""

Conditions:
  HasKeyPair: !Not [!Equals [!Ref KeyPairName, ""]]

Resources:
  # S3 Bucket for Cosigner configuration and state
  CosignerS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "${ProjectName}-cosigner-${Environment}-${AWS::AccountId}"
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: aws:kms
              KMSMasterKeyID: !Sub
                - "arn:aws:kms:${AWS::Region}:${AWS::AccountId}:key/${KeyId}"
                - KeyId:
                    Fn::ImportValue: !Sub ${ProjectName}-${Environment}-CosignerKMSKey-ID
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Stack
          Value: cosigner
        - Key: Project
          Value: fireblocks-callback-handler
        - Key: ManagedBy
          Value: cloudformation

  # CloudWatch Log Group for Cosigner
  CosignerLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/ec2/${ProjectName}-cosigner-${Environment}"
      RetentionInDays: 30

  # Cosigner EC2 Instance
  CosignerInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceType
      ImageId: ami-03598bf9d15814511 # Amazon Linux 2023 (ap-northeast-1)
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeSize: !Ref EbsVolumeSize
            VolumeType: gp3
            Encrypted: true
      SubnetId:
        Fn::ImportValue: !Sub ${ProjectName}-${Environment}-PrivateSubnet-ID
      SecurityGroupIds:
        - Fn::ImportValue: !Sub ${ProjectName}-${Environment}-CosignerSecurityGroup-ID
      IamInstanceProfile:
        Fn::ImportValue: !Sub ${ProjectName}-${Environment}-CosignerInstanceProfile-Name
      KeyName: !If [HasKeyPair, !Ref KeyPairName, !Ref "AWS::NoValue"]
      EnclaveOptions:
        Enabled: true
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          yum update -y
          yum install -y amazon-ssm-agent

          # Enable and start SSM Agent
          systemctl enable amazon-ssm-agent
          systemctl start amazon-ssm-agent

          # Install Nitro Enclaves CLI
          amazon-linux-extras install aws-nitro-enclaves-cli

          # Configure Nitro Enclaves
          usermod -aG ne ec2-user

          # Configure Nitro Enclaves allocator
          systemctl enable nitro-enclaves-allocator.service
          systemctl start nitro-enclaves-allocator.service

          # Create cosigner directory
          mkdir -p /home/ec2-user/cosigner
          chown ec2-user:ec2-user /home/ec2-user/cosigner

          # Log installation completion
          echo "Cosigner instance initialization completed" >> /var/log/cosigner-init.log

          # Store environment variables for later use
          echo "ENVIRONMENT=${Environment}" >> /home/ec2-user/.env
          chown ec2-user:ec2-user /home/ec2-user/.env
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-cosigner-${Environment}
        - Key: Environment
          Value: !Ref Environment
        - Key: Stack
          Value: cosigner
        - Key: Type
          Value: CosignerInstance
        - Key: Project
          Value: fireblocks-callback-handler
        - Key: ManagedBy
          Value: cloudformation

  # CloudWatch Alarms for Cosigner
  HighCPUAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub ${ProjectName}-cosigner-high-cpu-${Environment}
      AlarmDescription: "High CPU utilization for Cosigner instance"
      MetricName: CPUUtilization
      Namespace: AWS/EC2
      Statistic: Average
      Period: 300
      EvaluationPeriods: 2
      Threshold: 80
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: InstanceId
          Value: !Ref CosignerInstance
      TreatMissingData: notBreaching

  HighMemoryAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub ${ProjectName}-cosigner-high-memory-${Environment}
      AlarmDescription: "High memory utilization for Cosigner instance"
      MetricName: mem_used_percent
      Namespace: CWAgent
      Statistic: Average
      Period: 300
      EvaluationPeriods: 2
      Threshold: 80
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: InstanceId
          Value: !Ref CosignerInstance
      TreatMissingData: notBreaching

  StatusCheckAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub ${ProjectName}-cosigner-status-check-${Environment}
      AlarmDescription: "Status check failed for Cosigner instance"
      MetricName: StatusCheckFailed
      Namespace: AWS/EC2
      Statistic: Maximum
      Period: 300
      EvaluationPeriods: 2
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Dimensions:
        - Name: InstanceId
          Value: !Ref CosignerInstance
      TreatMissingData: notBreaching

Outputs:
  CosignerInstanceId:
    Description: Cosigner EC2 Instance ID
    Value: !Ref CosignerInstance
    Export:
      Name: !Sub ${ProjectName}-${Environment}-CosignerInstance-ID

  CosignerPrivateIP:
    Description: Cosigner EC2 Instance Private IP
    Value: !GetAtt CosignerInstance.PrivateIp
    Export:
      Name: !Sub ${ProjectName}-${Environment}-CosignerInstance-PrivateIP

  CosignerLogGroupName:
    Description: CloudWatch Log Group Name for Cosigner
    Value: !Ref CosignerLogGroup
    Export:
      Name: !Sub ${ProjectName}-${Environment}-CosignerLogGroup-Name

  SessionManagerCommand:
    Description: AWS CLI command to connect to Cosigner via Session Manager
    Value: !Sub "aws ssm start-session --target ${CosignerInstance} --region ${AWS::Region}"
    Export:
      Name: !Sub ${ProjectName}-${Environment}-SessionManager-Command

  CosignerS3BucketName:
    Description: S3 Bucket Name for Cosigner
    Value: !Ref CosignerS3Bucket
    Export:
      Name: !Sub ${ProjectName}-${Environment}-CosignerS3Bucket-Name

  CosignerS3BucketArn:
    Description: S3 Bucket ARN for Cosigner
    Value: !GetAtt CosignerS3Bucket.Arn
    Export:
      Name: !Sub ${ProjectName}-${Environment}-CosignerS3Bucket-ARN
